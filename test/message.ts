import test from "ava";
import { randomBytes } from "crypto";
import { MsgType } from "../types";
import { writeMessage, readMessage } from "../message";

test("roundtrip string", (t) => {
  const buf = writeMessage(0, "testing");
  const msg = readMessage(buf);
  t.assert(msg.type === 0, "message type");
  t.assert(msg.value == "testing", "message raw");
});

test("roundtrip json", (t) => {
  const test = { aces: "yes", ok: true, something: 12345 };
  const buf = writeMessage(MsgType.GET_INPUTS, JSON.stringify(test));
  const msg = readMessage(buf);
  t.assert(msg.type === MsgType.GET_INPUTS, "message type");
  t.deepEqual(msg.data, test, "data");
  t.assert(msg.value === JSON.stringify(test));
});

test("workspaces read", (t) => {
  const buf = Buffer.from(
    "aTMtaXBjVgwAAAEAAABbIHsgImlkIjogMjIsICJ0eXBlIjogIndvcmtzcGFjZSIsICJvcmllbnRhdGlvbiI6ICJob3Jpem9udGFsIiwgInBlcmNlbnQiOiBudWxsLCAidXJnZW50IjogZmFsc2UsICJtYXJrcyI6IFsgXSwgImxheW91dCI6ICJzcGxpdGgiLCAiYm9yZGVyIjogIm5vbmUiLCAiY3VycmVudF9ib3JkZXJfd2lkdGgiOiAwLCAicmVjdCI6IHsgIngiOiA1LCAieSI6IDI5LCAid2lkdGgiOiAyMjQ2LCAiaGVpZ2h0IjogMTQ3MCB9LCAiZGVjb19yZWN0IjogeyAieCI6IDAsICJ5IjogMCwgIndpZHRoIjogMCwgImhlaWdodCI6IDAgfSwgIndpbmRvd19yZWN0IjogeyAieCI6IDAsICJ5IjogMCwgIndpZHRoIjogMCwgImhlaWdodCI6IDAgfSwgImdlb21ldHJ5IjogeyAieCI6IDAsICJ5IjogMCwgIndpZHRoIjogMCwgImhlaWdodCI6IDAgfSwgIm5hbWUiOiAiNCIsICJ3aW5kb3ciOiBudWxsLCAibm9kZXMiOiBbIF0sICJmbG9hdGluZ19ub2RlcyI6IFsgXSwgImZvY3VzIjogWyBdLCAiZnVsbHNjcmVlbl9tb2RlIjogMSwgInN0aWNreSI6IGZhbHNlLCAibnVtIjogNCwgIm91dHB1dCI6ICJlRFAtMSIsICJyZXByZXNlbnRhdGlvbiI6ICJIW10iLCAiZm9jdXNlZCI6IGZhbHNlLCAidmlzaWJsZSI6IHRydWUgfSwgeyAiaWQiOiA0LCAidHlwZSI6ICJ3b3Jrc3BhY2UiLCAib3JpZW50YXRpb24iOiAiaG9yaXpvbnRhbCIsICJwZXJjZW50IjogbnVsbCwgInVyZ2VudCI6IGZhbHNlLCAibWFya3MiOiBbIF0sICJsYXlvdXQiOiAic3BsaXRoIiwgImJvcmRlciI6ICJub25lIiwgImN1cnJlbnRfYm9yZGVyX3dpZHRoIjogMCwgInJlY3QiOiB7ICJ4IjogNDE4MSwgInkiOiAyOSwgIndpZHRoIjogMTkxMCwgImhlaWdodCI6IDEwNDYgfSwgImRlY29fcmVjdCI6IHsgIngiOiAwLCAieSI6IDAsICJ3aWR0aCI6IDAsICJoZWlnaHQiOiAwIH0sICJ3aW5kb3dfcmVjdCI6IHsgIngiOiAwLCAieSI6IDAsICJ3aWR0aCI6IDAsICJoZWlnaHQiOiAwIH0sICJnZW9tZXRyeSI6IHsgIngiOiAwLCAieSI6IDAsICJ3aWR0aCI6IDAsICJoZWlnaHQiOiAwIH0sICJuYW1lIjogIjEiLCAid2luZG93IjogbnVsbCwgIm5vZGVzIjogWyBdLCAiZmxvYXRpbmdfbm9kZXMiOiBbIF0sICJmb2N1cyI6IFsgOSwgNiBdLCAiZnVsbHNjcmVlbl9tb2RlIjogMSwgInN0aWNreSI6IGZhbHNlLCAibnVtIjogMSwgIm91dHB1dCI6ICJEUC01IiwgInJlcHJlc2VudGF0aW9uIjogIkhbVltmb290XSBdIiwgImZvY3VzZWQiOiBmYWxzZSwgInZpc2libGUiOiBmYWxzZSB9LCB7ICJpZCI6IDMxLCAidHlwZSI6ICJ3b3Jrc3BhY2UiLCAib3JpZW50YXRpb24iOiAiaG9yaXpvbnRhbCIsICJwZXJjZW50IjogbnVsbCwgInVyZ2VudCI6IGZhbHNlLCAibWFya3MiOiBbIF0sICJsYXlvdXQiOiAic3BsaXRoIiwgImJvcmRlciI6ICJub25lIiwgImN1cnJlbnRfYm9yZGVyX3dpZHRoIjogMCwgInJlY3QiOiB7ICJ4IjogNDE4MSwgInkiOiAyOSwgIndpZHRoIjogMTkxMCwgImhlaWdodCI6IDEwNDYgfSwgImRlY29fcmVjdCI6IHsgIngiOiAwLCAieSI6IDAsICJ3aWR0aCI6IDAsICJoZWlnaHQiOiAwIH0sICJ3aW5kb3dfcmVjdCI6IHsgIngiOiAwLCAieSI6IDAsICJ3aWR0aCI6IDAsICJoZWlnaHQiOiAwIH0sICJnZW9tZXRyeSI6IHsgIngiOiAwLCAieSI6IDAsICJ3aWR0aCI6IDAsICJoZWlnaHQiOiAwIH0sICJuYW1lIjogIjUiLCAid2luZG93IjogbnVsbCwgIm5vZGVzIjogWyBdLCAiZmxvYXRpbmdfbm9kZXMiOiBbIF0sICJmb2N1cyI6IFsgMzIgXSwgImZ1bGxzY3JlZW5fbW9kZSI6IDEsICJzdGlja3kiOiBmYWxzZSwgIm51bSI6IDUsICJvdXRwdXQiOiAiRFAtNSIsICJyZXByZXNlbnRhdGlvbiI6ICJIW1Nwb3RpZnldIiwgImZvY3VzZWQiOiBmYWxzZSwgInZpc2libGUiOiB0cnVlIH0sIHsgImlkIjogNywgInR5cGUiOiAid29ya3NwYWNlIiwgIm9yaWVudGF0aW9uIjogImhvcml6b250YWwiLCAicGVyY2VudCI6IG51bGwsICJ1cmdlbnQiOiBmYWxzZSwgIm1hcmtzIjogWyBdLCAibGF5b3V0IjogInNwbGl0aCIsICJib3JkZXIiOiAibm9uZSIsICJjdXJyZW50X2JvcmRlcl93aWR0aCI6IDAsICJyZWN0IjogeyAieCI6IDIyNjEsICJ5IjogMjksICJ3aWR0aCI6IDE5MTAsICJoZWlnaHQiOiAxMDQ2IH0sICJkZWNvX3JlY3QiOiB7ICJ4IjogMCwgInkiOiAwLCAid2lkdGgiOiAwLCAiaGVpZ2h0IjogMCB9LCAid2luZG93X3JlY3QiOiB7ICJ4IjogMCwgInkiOiAwLCAid2lkdGgiOiAwLCAiaGVpZ2h0IjogMCB9LCAiZ2VvbWV0cnkiOiB7ICJ4IjogMCwgInkiOiAwLCAid2lkdGgiOiAwLCAiaGVpZ2h0IjogMCB9LCAibmFtZSI6ICIyIiwgIndpbmRvdyI6IG51bGwsICJub2RlcyI6IFsgXSwgImZsb2F0aW5nX25vZGVzIjogWyBdLCAiZm9jdXMiOiBbIDggXSwgImZ1bGxzY3JlZW5fbW9kZSI6IDEsICJzdGlja3kiOiBmYWxzZSwgIm51bSI6IDIsICJvdXRwdXQiOiAiRFAtMiIsICJyZXByZXNlbnRhdGlvbiI6ICJIW2JyYXZlLWJyb3dzZXJdIiwgImZvY3VzZWQiOiBmYWxzZSwgInZpc2libGUiOiBmYWxzZSB9LCB7ICJpZCI6IDE4LCAidHlwZSI6ICJ3b3Jrc3BhY2UiLCAib3JpZW50YXRpb24iOiAiaG9yaXpvbnRhbCIsICJwZXJjZW50IjogbnVsbCwgInVyZ2VudCI6IGZhbHNlLCAibWFya3MiOiBbIF0sICJsYXlvdXQiOiAic3BsaXRoIiwgImJvcmRlciI6ICJub25lIiwgImN1cnJlbnRfYm9yZGVyX3dpZHRoIjogMCwgInJlY3QiOiB7ICJ4IjogMjI2MSwgInkiOiAyOSwgIndpZHRoIjogMTkxMCwgImhlaWdodCI6IDEwNDYgfSwgImRlY29fcmVjdCI6IHsgIngiOiAwLCAieSI6IDAsICJ3aWR0aCI6IDAsICJoZWlnaHQiOiAwIH0sICJ3aW5kb3dfcmVjdCI6IHsgIngiOiAwLCAieSI6IDAsICJ3aWR0aCI6IDAsICJoZWlnaHQiOiAwIH0sICJnZW9tZXRyeSI6IHsgIngiOiAwLCAieSI6IDAsICJ3aWR0aCI6IDAsICJoZWlnaHQiOiAwIH0sICJuYW1lIjogIjMiLCAid2luZG93IjogbnVsbCwgIm5vZGVzIjogWyBdLCAiZmxvYXRpbmdfbm9kZXMiOiBbIF0sICJmb2N1cyI6IFsgNDIgXSwgImZ1bGxzY3JlZW5fbW9kZSI6IDEsICJzdGlja3kiOiBmYWxzZSwgIm51bSI6IDMsICJvdXRwdXQiOiAiRFAtMiIsICJyZXByZXNlbnRhdGlvbiI6ICJIW0hbZm9vdCBdXSIsICJmb2N1c2VkIjogdHJ1ZSwgInZpc2libGUiOiB0cnVlIH0gXQ==",
    "base64"
  );
  const msg = readMessage(buf);
  t.assert(msg.data.length === 5, "workspace count");
  t.assert(msg.type === MsgType.GET_WORKSPACES, "message type");
});

test('unparsable', (t) => {
    const buf = writeMessage(0, '{"tst":"invalid')
    const msg = readMessage(buf)
    t.assert(msg.value === '{"tst":"invalid')
    t.deepEqual(msg.data, {unparsable:true})
})

test('invalid', (t) => {
    const buf = randomBytes(128)
    t.throws(() => readMessage(buf))
})
